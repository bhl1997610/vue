'use strict';
/**
 * @file boxSystem.js
 * @author wutai
 */
 const objectTools = require('./util/objectTool.js');
 const qs = require('querystring');
 const request = require('request');



/**
 * boxSystem类
 *
 * @class
 * @constructor
 * @param {string} server 请求的域地址
 * @param {string} user 应用ID.
 * @param {string} timestamp  时间戳.
 * @param {string} signature  签名.
 */

class BoxSystem {
    constructor(server, user, password, timeout) {
        this.server = server;
        this.user = user;
        this.password = password;
        this.timeout = timeout || 10000 ;   
    }

    commonHttp (url, params, headers = {}) {
        params['timestamp'] = Math.floor(Date.parse(new Date())/1000);        
        let paramsStr = qs.stringify(params);
        return new Promise((resolve, reject) => {
            request.get(this.server + url + '?' + paramsStr, {
                'auth': {
                    'user': this.user,
                    'password': this.password
                },
                'timeout': this.timeout
            }, (error, response, body) => {
                if (error === null) {
                    try {
                        resolve(JSON.parse(body));
                    } catch (e) {
                        // 无法解析json请求，就返回原始body
                        resolve(body);
                    }
                } else {
                    reject(error);
                }
            });
        });
    }

    /**
     * 关键词查找用户
     */
    search_user (keyword, type  = 4, options = {}) {
        let params = {
            'key': keyword,
            'type': type
        };
        params = objectTools.merge(params, options);
        return this.commonHttp('/v2/api/system/user/search', params);
    }

     /**
     * 获取部门列表
     */
    dept_list (options = {}) {
        let params = {};
        params = objectTools.merge(params, options);
        return this.commonHttp('/v2/api/system/department/list', params);
    }
}    

module.exports = BoxSystem;
 
 
 
 
